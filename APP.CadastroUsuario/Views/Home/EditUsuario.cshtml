@model APP.Domain.Entities.Usuarios

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>
<head>
    <meta charset="utf-8"/>
</head>
<h4>Usuarios</h4>
<h4>@Model?.Erro</h4>

<form id="form" method="post" action="Edit">
    <div class="form-group row">
       <div class=" col-md-6">
            <label for="id">Id</label>
            @Html.TextBoxFor(model => model.Id, new {@class = "form-control", @readonly = true})


       </div>
       
        <div class="col-md-6">
            <label for="Nome">Nome</label>
            @Html.TextBoxFor(model => model.Nome, new {@class = "form-control", @required = true})
        </div>
    </div>

    <div class="form-group">
        <label for="Idade">Idade</label>
        <input type="text" maxlength="2" id="Idade" name="Idade" class="form-control" onkeypress="return event.charCode >= 48 && event.charCode <= 57" value=@Model?.Idade />
    </div>

    <div class="form-group">
        <label for="cep">CEP</label>
        <input type="text" id="cep" name="cep" class="form-control" maxlength="8" onkeypress="return event.charCode >= 48 && event.charCode <= 57" value=@Model?.Cep />
    </div>
    <div class="form-group">
        <label for="logradouro">Logradouro</label>
        @Html.TextBoxFor(model => model.Logradouro, new {@class = "form-control", @id = "logradouro" })

    </div>
    <div class="form-group">
        <label for="bairro">Bairro</label>
        @Html.TextBoxFor(model => model.Bairro, new {@class = "form-control", @id = "bairro" })

    </div>
    <div class="form-group">
        <label for="localidade">Localidade</label>
        @Html.TextBoxFor(model => model.Localidade, new {@class = "form-control", @id = "localidade", @readonly = true })

    </div>
    <div class="form-group">
        <label for="uf">UF</label>
        @Html.TextBoxFor(model => model.Uf, new {@class = "form-control", @id = "uf", @readonly = true })
    </div>
    <button id="btnSalvar" type="submit" class="btn btn-primary">Salvar</button>

</form>

<div>

    <a asp-action="Index">Back to List</a>
</div>

<script>
    const cepInput = document.getElementById("cep");


    cepInput.addEventListener("input", function() {
        const cep = cepInput.value;
        console.log(cep);
        if (cep.length === 8) { // Certifique-se de que o CEP tenha 8 dígitos
            cap = cep.value;
            realizarRequisicaoAPI(cep);
        }else{
            EmptyInput();
        }
    });

    function EmptyInput(){
        document.getElementById("logradouro").value = null;
        document.getElementById("bairro").value = null;
        document.getElementById("localidade").value = null;
        document.getElementById("uf").value = null;
    }

    function realizarRequisicaoAPI(cep) {
        fetch(`https://viacep.com.br/ws/${cep}/json/`)
            .then(response => response.json())
            .then(data => {
                console.log(data);
                document.getElementById("logradouro").value = data.logradouro;
                document.getElementById("bairro").value = data.bairro;
                document.getElementById("localidade").value = data.localidade;
                document.getElementById("uf").value = data.uf;

                if (data.erro === true) {
                    EmptyInput();
                }
            })
            .catch(error => {
                EmptyInput();
                resultadoDiv.innerHTML = "Erro ao consultar o CEP.";
                console.error(error);
            });
    }
</script>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
